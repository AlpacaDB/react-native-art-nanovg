/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robclouth.art_nanovg.nanovg;

public class GLNVGcall {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GLNVGcall(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GLNVGcall obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        nanovgJNI.delete_GLNVGcall(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(int value) {
    nanovgJNI.GLNVGcall_type_set(swigCPtr, this, value);
  }

  public int getType() {
    return nanovgJNI.GLNVGcall_type_get(swigCPtr, this);
  }

  public void setImage(int value) {
    nanovgJNI.GLNVGcall_image_set(swigCPtr, this, value);
  }

  public int getImage() {
    return nanovgJNI.GLNVGcall_image_get(swigCPtr, this);
  }

  public void setPathOffset(int value) {
    nanovgJNI.GLNVGcall_pathOffset_set(swigCPtr, this, value);
  }

  public int getPathOffset() {
    return nanovgJNI.GLNVGcall_pathOffset_get(swigCPtr, this);
  }

  public void setPathCount(int value) {
    nanovgJNI.GLNVGcall_pathCount_set(swigCPtr, this, value);
  }

  public int getPathCount() {
    return nanovgJNI.GLNVGcall_pathCount_get(swigCPtr, this);
  }

  public void setTriangleOffset(int value) {
    nanovgJNI.GLNVGcall_triangleOffset_set(swigCPtr, this, value);
  }

  public int getTriangleOffset() {
    return nanovgJNI.GLNVGcall_triangleOffset_get(swigCPtr, this);
  }

  public void setTriangleCount(int value) {
    nanovgJNI.GLNVGcall_triangleCount_set(swigCPtr, this, value);
  }

  public int getTriangleCount() {
    return nanovgJNI.GLNVGcall_triangleCount_get(swigCPtr, this);
  }

  public void setUniformOffset(int value) {
    nanovgJNI.GLNVGcall_uniformOffset_set(swigCPtr, this, value);
  }

  public int getUniformOffset() {
    return nanovgJNI.GLNVGcall_uniformOffset_get(swigCPtr, this);
  }

  public GLNVGcall() {
    this(nanovgJNI.new_GLNVGcall(), true);
  }

}
