/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robclouth.art_nanovg.nanovg;

public class GLNVGfragUniforms {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GLNVGfragUniforms(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GLNVGfragUniforms obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        nanovgJNI.delete_GLNVGfragUniforms(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setScissorMat(SWIGTYPE_p_float value) {
    nanovgJNI.GLNVGfragUniforms_scissorMat_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getScissorMat() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_scissorMat_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setPaintMat(SWIGTYPE_p_float value) {
    nanovgJNI.GLNVGfragUniforms_paintMat_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getPaintMat() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_paintMat_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setInnerCol(NVGcolor value) {
    nanovgJNI.GLNVGfragUniforms_innerCol_set(swigCPtr, this, NVGcolor.getCPtr(value), value);
  }

  public NVGcolor getInnerCol() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_innerCol_get(swigCPtr, this);
    return (cPtr == 0) ? null : new NVGcolor(cPtr, false);
  }

  public void setOuterCol(NVGcolor value) {
    nanovgJNI.GLNVGfragUniforms_outerCol_set(swigCPtr, this, NVGcolor.getCPtr(value), value);
  }

  public NVGcolor getOuterCol() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_outerCol_get(swigCPtr, this);
    return (cPtr == 0) ? null : new NVGcolor(cPtr, false);
  }

  public void setScissorExt(SWIGTYPE_p_float value) {
    nanovgJNI.GLNVGfragUniforms_scissorExt_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getScissorExt() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_scissorExt_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setScissorScale(SWIGTYPE_p_float value) {
    nanovgJNI.GLNVGfragUniforms_scissorScale_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getScissorScale() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_scissorScale_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setExtent(SWIGTYPE_p_float value) {
    nanovgJNI.GLNVGfragUniforms_extent_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getExtent() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_extent_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setRadius(float value) {
    nanovgJNI.GLNVGfragUniforms_radius_set(swigCPtr, this, value);
  }

  public float getRadius() {
    return nanovgJNI.GLNVGfragUniforms_radius_get(swigCPtr, this);
  }

  public void setFeather(float value) {
    nanovgJNI.GLNVGfragUniforms_feather_set(swigCPtr, this, value);
  }

  public float getFeather() {
    return nanovgJNI.GLNVGfragUniforms_feather_get(swigCPtr, this);
  }

  public void setStrokeMult(float value) {
    nanovgJNI.GLNVGfragUniforms_strokeMult_set(swigCPtr, this, value);
  }

  public float getStrokeMult() {
    return nanovgJNI.GLNVGfragUniforms_strokeMult_get(swigCPtr, this);
  }

  public void setStrokeThr(float value) {
    nanovgJNI.GLNVGfragUniforms_strokeThr_set(swigCPtr, this, value);
  }

  public float getStrokeThr() {
    return nanovgJNI.GLNVGfragUniforms_strokeThr_get(swigCPtr, this);
  }

  public void setTexType(float value) {
    nanovgJNI.GLNVGfragUniforms_texType_set(swigCPtr, this, value);
  }

  public float getTexType() {
    return nanovgJNI.GLNVGfragUniforms_texType_get(swigCPtr, this);
  }

  public void setType(float value) {
    nanovgJNI.GLNVGfragUniforms_type_set(swigCPtr, this, value);
  }

  public float getType() {
    return nanovgJNI.GLNVGfragUniforms_type_get(swigCPtr, this);
  }

  public void setUniformArray(SWIGTYPE_p_a_4__float value) {
    nanovgJNI.GLNVGfragUniforms_uniformArray_set(swigCPtr, this, SWIGTYPE_p_a_4__float.getCPtr(value));
  }

  public SWIGTYPE_p_a_4__float getUniformArray() {
    long cPtr = nanovgJNI.GLNVGfragUniforms_uniformArray_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_a_4__float(cPtr, false);
  }

  public GLNVGfragUniforms() {
    this(nanovgJNI.new_GLNVGfragUniforms(), true);
  }

}
